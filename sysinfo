#!/usr/bin/env ruby

require 'etc'
require 'colorize'

WM = {
	'xfwm4' => 'Xfwm'
}

DE = {
	'xfce4-session' => 'XFCE4',
}

GENTOO_LOGO = [
	"     -odNMMMMMMMMNNmhy+-`            ",
	"   -yNMMMMMMMMMMMNNNmmdhy+-          ",
	" .`omMMMMMMMMMMMMNmdmmmmddhhy`       ",
	" omMMMMMMMMMMMNhhyyyohmdddhhhdo`     ",
	".ydMMMMMMMMMMdhs++so/smdddhhhhdm+`   ",
	" oyhdmNMMMMMMMNdyooydmddddhhhhyhNd.  ",
	"  :oyhhdNNMMMMMMMNNNmmdddhhhhhyymMh  ",
	"    .:+sydNMMMMMNNNmmmdddhhhhhhmMmy  ",
	"       /mMMMMMMNNNmmmdddhhhhhmMNhs:  ",
	"    .'oNMMMMMMMNNNmmmddddhhdmMNhs+`  ",
	"  .`sNMMMMMMMMNNNmmmdddddmNMmhs.     ",
	" /NMMMMMMMMNNNNmmmdddmNMNdso:`       ",
	"+MMMMMMMNNNNNmmmmdmNMNdsoo-          ",
	"yMMNNNNNNNmmmmmNNMmhs+-=`            ",
	"\hMMNNNNNNNNMNdhs+++-/`               ",
	"`\ohdmmddhys++++:./`                  ",
	"  `\-//////:--.                       "
]

module SystemInfo
	def username
		`echo -n $USER`
	end

	def hostname
		`echo -n $HOSTNAME`
	end

	def shell
		`basename $(echo -n $SHELL)`.tr("\n", "")
	end

	def kernel
		`uname -mrs`.tr("\n", "")
	end

	def uptime
		File.open('/proc/uptime').gets.split[0].to_i
	end

	def package
		`qlist -I | wc -l`.tr("\n", "")
	end

	def resolution
		`xdpyinfo | grep dimension | awk '{print $2}'`.tr("\n", "")
	end

	def cpu
		`uname -p`.tr("\n", "")
	end

	def ram
		meminfo = File.open('/proc/meminfo')
		tot = meminfo.gets.split[1].to_i >> 10	
		free = meminfo.gets.split[1].to_i >> 10
		"#{free}MB / #{tot}MB"
	end

	def windowmgr
		WM.each { |wm_process, wm_name|
			return wm_name if process_exist?(wm_process)
		}	
	end

	def deskenv
		DE.each { |de_process, de_name|
			return de_name if process_exist?(de_process)
		}	
	end

	def process_exist?(name)
		!`ps -A | grep #{name}`.empty?
	end
end

class Gent
	include SystemInfo
	
	def initialize()
		@sysinfo = []
	end

	def format_uptime
		t = uptime
		ret = ""
		ret = ret + "#{t/86400}d"
		t %= 86400
		ret = ret + " #{t/3600}h"
		t %= 3600
		ret = ret + " #{t/60}m"
		t %= 60
		ret = ret + " #{t}s"
		ret
	end

	def collect_sysinfo
		@sysinfo << "#{username.green}@#{hostname.green}"   \
		         << "#{"Kernel: ".red}#{kernel}"            \
				 << "#{"Uptime: ".red}#{format_uptime}"     \
				 << "#{"Packages: ".red}#{package}"         \
				 << "#{"Shell: ".red}#{shell}"              \
				 << "#{"Resolution: ".red}#{resolution}"    \
				 << "#{"DE: ".red}#{deskenv}"               \
				 << "#{"WM: ".red}#{windowmgr}"             \
				 << "#{"CPU: ".red}#{cpu}"                  \
				 << "#{"RAM: ".red}#{ram}"                  \
	end

	def go
		collect_sysinfo
#		puts @sysinfo
		0.upto(16) { |i|
			print GENTOO_LOGO[i]
			print @sysinfo[i-4], "       " if i >= 4 && i <= 14
			puts
		}
	end
end

gent = Gent.new
gent.go

# vim: ts=4
